1. 함수 타입 지정

1-1. Function Type Expressions
(a,b...)=> return Type/ (a : number, b : number) => void

function consoleLog(a,b,cb:(a : number, b : number) => void){
    cb(a,b)
}

1-2. Call Signatures
1. type 키워드를 이용한다.
2. => 대신 :을 사용한다. (: 사용한다는 것은 함수를 정의하겠다는 뜻)
3. call Signatures 앞에 new 키워드 추가하여 생성자 함수로 기능하게 할 수 있다.

*** 함수 선언문에 직접적으로 타입 선언은 불가, 함수 표현식에만 직접적으로 타입 선언 가능
=> 매개변수, 함수 표현식에만 사용가능
=> {} type 키워드 없이 호출 시그니처 타입 할당가능

*** Call Signatures는 type name = {
    (a : number) : void;
    (b : string) : void
} 처럼 구현 가능, 이 떄는 매개변수 타입을 두 개로 지정해야 한다.


2. 선택적 매개변수 ? 
매개변수 앞에 ?를 사용해서 없을 수 도 있음을 알려준다.


3. 함수 오버로드
3-1. 함수문 위에서 함수의 매개변수와 리턴값을 규정하는 문법을 의미한다.
3-2. function FnName(args, aggs..) : return-Type => 함수 오버로드 구성식
3-3. TS가 스스로 반환값을 식별할 수 없을 떄 많이 사용한다.

