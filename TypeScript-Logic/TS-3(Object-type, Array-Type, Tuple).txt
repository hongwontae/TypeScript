1. 객체 타입 지정
1-1. const person : {
    title : string,
    area : string[],
    age : number
} => 단순하게 중괄호 안에 key : 타입

1-2. type obj2 = {
    title : string,
    age : number
} const person : obj2 = {
    title : 'HWT',
    age : 20
} => type 키워드에서 객체 타입을 지정


2. 배열 타입 지정
2-1. 배열 리터럴
=> number[] : 배열의 요소들은 숫자
=> string[] : 배열의 요소들을 문자열

2-2. 제네릭 타입
=> Array<Number>, Array<String>

2-3. 빈 배열 선언
=> string[] = []/ Array<String> = []

2-4. 튜플 ( 고정된 길이와 각각의 요소가 다른 타입을 가질 수 있는 배열입니다.)
=> let tuple : [string, number, boolean] = ["apple", 43, true];
=> 순서대로 타입이 정의된 고정 길이 배열입니다.
=> 세 개의 요소, 세 개의 지정된 순서의 타입

2-5. 튜플의 선택적 요소
=> 일부 요소를 선택적으로 정의할 수 있습니다. ?를 사용합니다.
=> let opTuple : [string, ?number, ?boolean];
=> opTuple = ['STR'], opTuple = ['STR', 1], opTuple = ['STR', 1, false]

2-6. 튜플의 나머지 요소
=> 나머지 요소를 지정할 수 있습니다. rest parameter + 타입
=> 튜플의 끝에 여러 개의 같은 타입의 요소를 받을 수 있습니다.
=> let restTuple : [string, ...number];
=> restTuplet = ['1', 1,2,3,4,5...];


